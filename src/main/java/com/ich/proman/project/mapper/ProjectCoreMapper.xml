<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ich.proman.project.mapper.ProjectCoreMapper" >

    <insert id="insert" parameterType="com.ich.proman.project.pojo.Project">
        insert into pro_project(id,title,status,createtime,iterationtime,userid,username,versionid,version)
        values(#{id},#{title},#{status},#{createtime},#{iterationtime},#{userid},#{username},#{versionid},#{version})
    </insert>

    <update id="updateTitle">
        update pro_project set title = #{title} where versionid = #{id}
    </update>

    <update id="updateProjectToDel">
        update pro_project set deletecauses = #{deletecauses},status = 3 where id = #{id}
    </update>

    <update id="updateProjectToHis">
        update pro_project set iterationcauses = #{iterationcauses},status = 2 where id = #{id}
    </update>

    <select id="selectById" resultType="com.ich.proman.project.pojo.Project">
        select * from pro_project where id = #{id}
    </select>

    <select id="selectByTitleAndVersion"  resultType="com.ich.proman.project.pojo.Project">
        select * from pro_project where title = #{title} and version = #{version}
    </select>

    <select id="selectByVersion" resultType="com.ich.proman.project.pojo.Project">
        select * from pro_project where versionid = #{versionid} and version = #{version}
    </select>
    
    <select id="selectGroupByVersionid"  resultType="com.ich.proman.project.pojo.Project">
        select * from pro_project group by versionid
    </select>

    <select id="selectVersionById"  resultType="com.ich.proman.project.pojo.Project">
        select * from pro_project where versionid = #{id} order by iterationtime desc
    </select>

    <select id="selectModularListByPid" resultType="map">
        select m.*,c.title as catalogtitle,
        (select count(*) from pro_task where modularid = m.id ) as tasknum,
        (select count(*) from pro_test where modularid = m.id ) as testnum,
        (select count(*) from pro_bug where modularid = m.id ) as bugnum,
        (select count(*) from pro_design where modularid = m.id) as designnum,
        (select count(*) from pro_file where modularid = m.id and groupstatus = 1) as filenum
        from pro_modular m
        left join pro_catalog c on c.id = m.catalogid
        where m.projectid = #{id}
        order by c.title ,m.modularname
    </select>

    <select id="selectModularListByQuery" parameterType="map" resultType="map">
        select
        m.*,
        p.title as projectname,
        p.version as projectversion,
        c.title as catalogtitle,
        (select count(*) from pro_task where modularid = m.id ) as tasknum,
        (select count(*) from pro_test where modularid = m.id ) as testnum,
        (select count(*) from pro_bug where modularid = m.id ) as bugnum,
        (select count(*) from pro_design where modularid = m.id) as designnum,
        (select count(*) from pro_file where modularid = m.id and groupstatus = 1) as filenum
        from pro_modular m
        left join pro_project p on m.projectid = p.id
        left join pro_catalog c on c.id = m.catalogid
        where 1=1
        <if test="searchkey!=null"> and m.modularname like '%${searchkey}%'</if>
        <if test="projectid!=null"> and m.projectid = #{projectid}</if>
        <if test="catalogid!=null"> and c.id = #{catalogid}</if>
        order by c.title ,m.modularname
    </select>
</mapper>